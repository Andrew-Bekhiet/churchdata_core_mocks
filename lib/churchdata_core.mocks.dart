// Mocks generated by Mockito 5.3.2 from annotations
// in churchdata_core_mocks/churchdata_core.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i9;
import 'dart:ui' as _i12;

import 'package:cloud_functions/cloud_functions.dart' as _i4;
import 'package:cloud_functions_platform_interface/cloud_functions_platform_interface.dart'
    as _i3;
import 'package:firebase_core/firebase_core.dart' as _i2;
import 'package:firebase_dynamic_links/firebase_dynamic_links.dart' as _i10;
import 'package:firebase_dynamic_links_platform_interface/firebase_dynamic_links_platform_interface.dart'
    as _i6;
import 'package:firebase_messaging/firebase_messaging.dart' as _i8;
import 'package:firebase_messaging_platform_interface/firebase_messaging_platform_interface.dart'
    as _i5;
import 'package:firebase_remote_config/firebase_remote_config.dart' as _i11;
import 'package:firebase_remote_config_platform_interface/firebase_remote_config_platform_interface.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseApp_0 extends _i1.SmartFake implements _i2.FirebaseApp {
  _FakeFirebaseApp_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFirebaseFunctionsPlatform_1 extends _i1.SmartFake
    implements _i3.FirebaseFunctionsPlatform {
  _FakeFirebaseFunctionsPlatform_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpsCallable_2 extends _i1.SmartFake implements _i4.HttpsCallable {
  _FakeHttpsCallable_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNotificationSettings_3 extends _i1.SmartFake
    implements _i5.NotificationSettings {
  _FakeNotificationSettings_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUri_4 extends _i1.SmartFake implements Uri {
  _FakeUri_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShortDynamicLink_5 extends _i1.SmartFake
    implements _i6.ShortDynamicLink {
  _FakeShortDynamicLink_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDateTime_6 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteConfigSettings_7 extends _i1.SmartFake
    implements _i7.RemoteConfigSettings {
  _FakeRemoteConfigSettings_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRemoteConfigValue_8 extends _i1.SmartFake
    implements _i7.RemoteConfigValue {
  _FakeRemoteConfigValue_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [FirebaseFunctions].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseFunctions extends _i1.Mock implements _i4.FirebaseFunctions {
  MockFirebaseFunctions() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);
  @override
  _i3.FirebaseFunctionsPlatform get delegate => (super.noSuchMethod(
        Invocation.getter(#delegate),
        returnValue: _FakeFirebaseFunctionsPlatform_1(
          this,
          Invocation.getter(#delegate),
        ),
      ) as _i3.FirebaseFunctionsPlatform);
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i4.HttpsCallable httpsCallable(
    String? name, {
    _i3.HttpsCallableOptions? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #httpsCallable,
          [name],
          {#options: options},
        ),
        returnValue: _FakeHttpsCallable_2(
          this,
          Invocation.method(
            #httpsCallable,
            [name],
            {#options: options},
          ),
        ),
      ) as _i4.HttpsCallable);
  @override
  void useFunctionsEmulator(
    String? host,
    int? port,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #useFunctionsEmulator,
          [
            host,
            port,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [FirebaseMessaging].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseMessaging extends _i1.Mock implements _i8.FirebaseMessaging {
  MockFirebaseMessaging() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);
  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isAutoInitEnabled => (super.noSuchMethod(
        Invocation.getter(#isAutoInitEnabled),
        returnValue: false,
      ) as bool);
  @override
  _i9.Stream<String> get onTokenRefresh => (super.noSuchMethod(
        Invocation.getter(#onTokenRefresh),
        returnValue: _i9.Stream<String>.empty(),
      ) as _i9.Stream<String>);
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i9.Future<_i5.RemoteMessage?> getInitialMessage() => (super.noSuchMethod(
        Invocation.method(
          #getInitialMessage,
          [],
        ),
        returnValue: _i9.Future<_i5.RemoteMessage?>.value(),
      ) as _i9.Future<_i5.RemoteMessage?>);
  @override
  _i9.Future<void> deleteToken() => (super.noSuchMethod(
        Invocation.method(
          #deleteToken,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<String?> getAPNSToken() => (super.noSuchMethod(
        Invocation.method(
          #getAPNSToken,
          [],
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);
  @override
  _i9.Future<String?> getToken({String? vapidKey}) => (super.noSuchMethod(
        Invocation.method(
          #getToken,
          [],
          {#vapidKey: vapidKey},
        ),
        returnValue: _i9.Future<String?>.value(),
      ) as _i9.Future<String?>);
  @override
  _i9.Future<bool> isSupported() => (super.noSuchMethod(
        Invocation.method(
          #isSupported,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  _i9.Future<_i5.NotificationSettings> getNotificationSettings() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNotificationSettings,
          [],
        ),
        returnValue: _i9.Future<_i5.NotificationSettings>.value(
            _FakeNotificationSettings_3(
          this,
          Invocation.method(
            #getNotificationSettings,
            [],
          ),
        )),
      ) as _i9.Future<_i5.NotificationSettings>);
  @override
  _i9.Future<_i5.NotificationSettings> requestPermission({
    bool? alert = true,
    bool? announcement = false,
    bool? badge = true,
    bool? carPlay = false,
    bool? criticalAlert = false,
    bool? provisional = false,
    bool? sound = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestPermission,
          [],
          {
            #alert: alert,
            #announcement: announcement,
            #badge: badge,
            #carPlay: carPlay,
            #criticalAlert: criticalAlert,
            #provisional: provisional,
            #sound: sound,
          },
        ),
        returnValue: _i9.Future<_i5.NotificationSettings>.value(
            _FakeNotificationSettings_3(
          this,
          Invocation.method(
            #requestPermission,
            [],
            {
              #alert: alert,
              #announcement: announcement,
              #badge: badge,
              #carPlay: carPlay,
              #criticalAlert: criticalAlert,
              #provisional: provisional,
              #sound: sound,
            },
          ),
        )),
      ) as _i9.Future<_i5.NotificationSettings>);
  @override
  _i9.Future<void> sendMessage({
    String? to,
    Map<String, String>? data,
    String? collapseKey,
    String? messageId,
    String? messageType,
    int? ttl,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendMessage,
          [],
          {
            #to: to,
            #data: data,
            #collapseKey: collapseKey,
            #messageId: messageId,
            #messageType: messageType,
            #ttl: ttl,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setAutoInitEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setAutoInitEnabled,
          [enabled],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setForegroundNotificationPresentationOptions({
    bool? alert = false,
    bool? badge = false,
    bool? sound = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setForegroundNotificationPresentationOptions,
          [],
          {
            #alert: alert,
            #badge: badge,
            #sound: sound,
          },
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> subscribeToTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #subscribeToTopic,
          [topic],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> unsubscribeFromTopic(String? topic) => (super.noSuchMethod(
        Invocation.method(
          #unsubscribeFromTopic,
          [topic],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
}

/// A class which mocks [FirebaseDynamicLinks].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseDynamicLinks extends _i1.Mock
    implements _i10.FirebaseDynamicLinks {
  MockFirebaseDynamicLinks() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);
  @override
  set app(_i2.FirebaseApp? _app) => super.noSuchMethod(
        Invocation.setter(
          #app,
          _app,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i9.Stream<_i6.PendingDynamicLinkData> get onLink => (super.noSuchMethod(
        Invocation.getter(#onLink),
        returnValue: _i9.Stream<_i6.PendingDynamicLinkData>.empty(),
      ) as _i9.Stream<_i6.PendingDynamicLinkData>);
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  _i9.Future<_i6.PendingDynamicLinkData?> getInitialLink() =>
      (super.noSuchMethod(
        Invocation.method(
          #getInitialLink,
          [],
        ),
        returnValue: _i9.Future<_i6.PendingDynamicLinkData?>.value(),
      ) as _i9.Future<_i6.PendingDynamicLinkData?>);
  @override
  _i9.Future<_i6.PendingDynamicLinkData?> getDynamicLink(Uri? url) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDynamicLink,
          [url],
        ),
        returnValue: _i9.Future<_i6.PendingDynamicLinkData?>.value(),
      ) as _i9.Future<_i6.PendingDynamicLinkData?>);
  @override
  _i9.Future<Uri> buildLink(_i6.DynamicLinkParameters? parameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildLink,
          [parameters],
        ),
        returnValue: _i9.Future<Uri>.value(_FakeUri_4(
          this,
          Invocation.method(
            #buildLink,
            [parameters],
          ),
        )),
      ) as _i9.Future<Uri>);
  @override
  _i9.Future<_i6.ShortDynamicLink> buildShortLink(
    _i6.DynamicLinkParameters? parameters, {
    _i6.ShortDynamicLinkType? shortLinkType = _i6.ShortDynamicLinkType.short,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #buildShortLink,
          [parameters],
          {#shortLinkType: shortLinkType},
        ),
        returnValue:
            _i9.Future<_i6.ShortDynamicLink>.value(_FakeShortDynamicLink_5(
          this,
          Invocation.method(
            #buildShortLink,
            [parameters],
            {#shortLinkType: shortLinkType},
          ),
        )),
      ) as _i9.Future<_i6.ShortDynamicLink>);
}

/// A class which mocks [FirebaseRemoteConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockFirebaseRemoteConfig extends _i1.Mock
    implements _i11.FirebaseRemoteConfig {
  MockFirebaseRemoteConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseApp get app => (super.noSuchMethod(
        Invocation.getter(#app),
        returnValue: _FakeFirebaseApp_0(
          this,
          Invocation.getter(#app),
        ),
      ) as _i2.FirebaseApp);
  @override
  DateTime get lastFetchTime => (super.noSuchMethod(
        Invocation.getter(#lastFetchTime),
        returnValue: _FakeDateTime_6(
          this,
          Invocation.getter(#lastFetchTime),
        ),
      ) as DateTime);
  @override
  _i7.RemoteConfigFetchStatus get lastFetchStatus => (super.noSuchMethod(
        Invocation.getter(#lastFetchStatus),
        returnValue: _i7.RemoteConfigFetchStatus.noFetchYet,
      ) as _i7.RemoteConfigFetchStatus);
  @override
  _i7.RemoteConfigSettings get settings => (super.noSuchMethod(
        Invocation.getter(#settings),
        returnValue: _FakeRemoteConfigSettings_7(
          this,
          Invocation.getter(#settings),
        ),
      ) as _i7.RemoteConfigSettings);
  @override
  Map<dynamic, dynamic> get pluginConstants => (super.noSuchMethod(
        Invocation.getter(#pluginConstants),
        returnValue: <dynamic, dynamic>{},
      ) as Map<dynamic, dynamic>);
  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);
  @override
  _i9.Future<bool> activate() => (super.noSuchMethod(
        Invocation.method(
          #activate,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  _i9.Future<void> ensureInitialized() => (super.noSuchMethod(
        Invocation.method(
          #ensureInitialized,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> fetch() => (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<bool> fetchAndActivate() => (super.noSuchMethod(
        Invocation.method(
          #fetchAndActivate,
          [],
        ),
        returnValue: _i9.Future<bool>.value(false),
      ) as _i9.Future<bool>);
  @override
  Map<String, _i7.RemoteConfigValue> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: <String, _i7.RemoteConfigValue>{},
      ) as Map<String, _i7.RemoteConfigValue>);
  @override
  bool getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: false,
      ) as bool);
  @override
  int getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValue: 0,
      ) as int);
  @override
  double getDouble(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValue: 0.0,
      ) as double);
  @override
  String getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: '',
      ) as String);
  @override
  _i7.RemoteConfigValue getValue(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getValue,
          [key],
        ),
        returnValue: _FakeRemoteConfigValue_8(
          this,
          Invocation.method(
            #getValue,
            [key],
          ),
        ),
      ) as _i7.RemoteConfigValue);
  @override
  _i9.Future<void> setConfigSettings(
          _i7.RemoteConfigSettings? remoteConfigSettings) =>
      (super.noSuchMethod(
        Invocation.method(
          #setConfigSettings,
          [remoteConfigSettings],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  _i9.Future<void> setDefaults(Map<String, dynamic>? defaultParameters) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDefaults,
          [defaultParameters],
        ),
        returnValue: _i9.Future<void>.value(),
        returnValueForMissingStub: _i9.Future<void>.value(),
      ) as _i9.Future<void>);
  @override
  void addListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i12.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
