// Mocks generated by Mockito 5.2.0 from annotations
// in churchdata_core/test/src/services/updates_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:churchdata_core/src/services/launcher_service.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [LauncherService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLauncherService extends _i1.Mock implements _i2.LauncherService {
  MockLauncherService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> launch(String? url) =>
      (super.noSuchMethod(Invocation.method(#launch, [url]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> launchUrl(Uri? url) =>
      (super.noSuchMethod(Invocation.method(#launchUrl, [url]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> launchSMSChat(String? fomattedPhone) =>
      (super.noSuchMethod(Invocation.method(#launchSMSChat, [fomattedPhone]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
  @override
  _i3.Future<bool> launchWhatsappChat(String? fomattedPhone) => (super
      .noSuchMethod(Invocation.method(#launchWhatsappChat, [fomattedPhone]),
          returnValue: Future<bool>.value(false)) as _i3.Future<bool>);
}
